@import url('https://fonts.googleapis.com/css2?family=Poppins:wght@400;600&display=swap');

:root {
  --bg: #1a1b26;
  --accent: #00bfa6;
  --text: #ffffff;
  --secondary: #2f3145;
}

body {
  background: var(--bg);
  color: var(--text);
  font-family: "Poppins", sans-serif;
  display: flex;
  justify-content: center;
  align-items: center;
  height: 100vh;
  margin: 0;
}

.app {
  text-align: center;
  width: 340px;
  position: relative;
  transition: all 0.3s ease;
}

/* Floating layout style */
.app.floating {
  text-shadow: 0 2px 4px rgba(0,0,0,0.5);
}

/* Boxed layout style */
.app.boxed {
  background: rgba(18,20,28,0.36);
  backdrop-filter: blur(6px) saturate(110%);
  -webkit-backdrop-filter: blur(6px) saturate(110%);
  padding: 2.5rem;
  border-radius: 18px;
  box-shadow: 0 6px 30px rgba(0,0,0,0.45);
  border: 1px solid rgba(255,255,255,0.04);
}

.layout-toggle {
  position: fixed;
  bottom: 20px;
  right: 20px;
  background: rgba(255, 255, 255, 0.15);
  border: none;
  color: #fff;
  padding: 0.5rem;
  border-radius: 50%;
  cursor: pointer;
  transition: all 0.3s ease;
  width: 32px;
  height: 32px;
  display: flex;
  align-items: center;
  justify-content: center;
  backdrop-filter: blur(4px);
  -webkit-backdrop-filter: blur(4px);
  box-shadow: 0 2px 8px rgba(0,0,0,0.2);
  z-index: 10;
}

.layout-toggle:hover {
  background: rgba(255, 255, 255, 0.25);
  transform: translateY(-1px);
  box-shadow: 0 4px 12px rgba(0,0,0,0.3);
}

.title {
  font-size: 2rem;
  margin-bottom: 0.3rem;
  text-shadow: 0 2px 8px rgba(0,0,0,0.5);
  color: rgba(255,255,255,0.95);
}

.subtitle {
  color: rgba(255,255,255,0.8);
  font-size: 0.9rem;
  margin-bottom: 1.5rem;
  text-shadow: 0 2px 4px rgba(0,0,0,0.4);
}

/* Timer Circle */
.timer-circle {
  position: relative;
  width: 200px;
  height: 200px;
  margin: 0 auto 1.5rem;
}

.timer-circle svg {
  position: relative;
  width: 200px;
  height: 200px;
  transform: rotate(-90deg);
}

/* hide the inline SVG visuals because canvas will draw the visible timer
   keep the DOM elements for layout and accessibility */
.timer-circle svg { display: none; }

.timer-circle circle {
  fill: none;
  /* subtle, semi-transparent strokes so the timer feels part of the scene */
  stroke: rgba(255,255,255,0.08);
  stroke-width: 10;
  stroke-linecap: round;
}

#progress {
  stroke: var(--accent);
  stroke-dasharray: 565;
  stroke-dashoffset: 565;
  transition: stroke-dashoffset 1s linear;
}

.timer-display {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  font-size: 2.5rem;
  font-weight: 600;
  color: #fff;
  text-shadow: 0 6px 18px rgba(0,0,0,0.6), 0 1px 0 rgba(255,255,255,0.03);
}

/* visually-hidden utility for accessibility */
.sr-only {
  position: absolute !important;
  width: 1px !important;
  height: 1px !important;
  padding: 0 !important;
  margin: -1px !important;
  overflow: hidden !important;
  clip: rect(0,0,0,0) !important;
  white-space: nowrap !important;
  border: 0 !important;
}

/* Buttons */
.controls button {
  margin: 0.3rem;
  padding: 0.7rem 1.4rem;
  border: none;
  border-radius: 10px;
  background: linear-gradient(180deg, rgba(0,191,166,0.8), rgba(0,165,144,0.75));
  color: white;
  font-size: 1rem;
  cursor: pointer;
  transition: all 0.18s ease;
  box-shadow: 0 4px 12px rgba(0,0,0,0.3);
  backdrop-filter: blur(4px);
  -webkit-backdrop-filter: blur(4px);
  text-shadow: 0 1px 2px rgba(0,0,0,0.3);
}

.controls button:hover {
  background: linear-gradient(180deg, rgba(0,191,166,0.9), rgba(0,165,144,0.85));
  box-shadow: 0 6px 18px rgba(0,0,0,0.4);
  transform: translateY(-1px);
}

.set-time {
  margin-top: 1rem;
  text-shadow: 0 1px 2px rgba(0,0,0,0.5);
}

input {
  padding: 0.4rem;
  width: 70px;
  text-align: center;
  border-radius: 6px;
  border: none;
  font-size: 1rem;
  background: rgba(255,255,255,0.15);
  color: white;
  backdrop-filter: blur(4px);
  -webkit-backdrop-filter: blur(4px);
  box-shadow: 0 2px 8px rgba(0,0,0,0.2);
  transition: all 0.3s ease;
}

input:focus {
  background: rgba(255,255,255,0.2);
  outline: none;
  box-shadow: 0 4px 12px rgba(0,0,0,0.3);
}

.quote-container {
  margin-top: 1.8rem;
  display: flex;
  align-items: center;
  justify-content: center;
  gap: 1rem;
}

.quote {
  font-style: italic;
  font-size: 0.9rem;
  color: rgba(255,255,255,0.9);
  transition: all 0.3s ease;
  text-shadow: 0 2px 4px rgba(0,0,0,0.4);
  backdrop-filter: blur(2px);
  -webkit-backdrop-filter: blur(2px);
  padding: 0.5rem 1rem;
  border-radius: 8px;
}

.next-quote-btn {
  background: rgba(255, 255, 255, 0.15);
  border: none;
  color: #fff;
  padding: 0.5rem;
  border-radius: 50%;
  cursor: pointer;
  transition: all 0.3s ease;
  width: 32px;
  height: 32px;
  display: flex;
  align-items: center;
  justify-content: center;
  backdrop-filter: blur(4px);
  -webkit-backdrop-filter: blur(4px);
  box-shadow: 0 2px 8px rgba(0,0,0,0.2);
  text-shadow: 0 1px 2px rgba(0,0,0,0.3);
}

.next-quote-btn:hover {
  background: rgba(255, 255, 255, 0.25);
  transform: translateY(-1px);
  box-shadow: 0 4px 12px rgba(0,0,0,0.3);
}

/* ===== Background animation (always running) ===== */
/* Keep this subtle so it doesn't distract from the timer UI. */
body {
  /* create a stacking context so pseudo-elements and .app z-index work predictably */
  position: relative;
}

.app {
  position: relative; /* ensure app sits above animated background */
  z-index: 1;
}

/* Removed soft gradient + float shapes per request; using canvas-based anime background instead */
/* Canvas background styles will be applied below (#bgCanvas). */

/* Video background styles */
#bgVideo {
  position: fixed;
  inset: 0;
  width: 100%;
  height: 100%;
  object-fit: cover;
  /* place the video behind the canvas so canvas-drawn timer is visible */
  z-index: -1; /* sits below canvas and overlay */
  pointer-events: none;
  opacity: 0.95;
  transition: opacity 300ms ease;
}

.video-overlay {
  position: fixed;
  inset: 0;
  /* move overlay below the canvas so canvas artwork (timer) is visible */
  z-index: 0; /* sits above video (-1) but below canvas (1) and .app (2) */
  /* keep a gentle darkening so foreground text stays readable */
  background: linear-gradient(rgba(6,8,12,0.18), rgba(6,8,12,0.28));
  pointer-events: none;
}

/* Canvas background for anime-style animation + clock */
#bgCanvas {
  position: fixed;
  inset: 0;
  width: 100%;
  height: 100%;
  /* place canvas above the overlay so canvas-drawn timer reads clearly on the video */
  z-index: 1; /* above overlay, below .app (z-index:2) */
  pointer-events: none;
  display: block;
}

/* UI canvas for drawing interface elements (timer) above the app so they remain sharp */
#uiCanvas {
  position: fixed;
  inset: 0;
  width: 100%;
  height: 100%;
  z-index: 3; /* above .app (2) so the timer isn't blurred by backdrop-filter */
  pointer-events: none;
  display: block;
}

/* small toggle button (optional) */
#toggleBg {
  position: fixed;
  left: 12px;
  bottom: 12px;
  z-index: 2; /* above .app */
  background: rgba(0,0,0,0.45);
  color: #fff;
  border: none;
  padding: 0.5rem 0.6rem;
  border-radius: 8px;
  cursor: pointer;
}

/* Background selector (prev/next) */
/* Background type selector (videos, pictures, anime) */
#bgTypeControls {
  position: fixed;
  left: 12px;
  bottom: 100px;
  z-index: 2;
  display: flex;
  gap: 8px;
  background: rgba(0,0,0,0.25);
  padding: 6px 8px;
  border-radius: 10px;
}
.bgTypeBtn {
  background: transparent;
  color: #fff;
  border: none;
  font-size: 1rem;
  padding: 6px 12px;
  border-radius: 6px;
  cursor: pointer;
  transition: background 0.2s;
}
.bgTypeBtn[aria-pressed="true"] {
  background: var(--accent);
  color: #222;
}

#bgControls {
  position: fixed;
  left: 12px;
  bottom: 56px; /* above the toggle button */
  z-index: 2;
  display: inline-flex;
  align-items: center;
  gap: 8px;
  background: rgba(0,0,0,0.45);
  padding: 6px 8px;
  border-radius: 10px;
}

#bgControls button {
  background: transparent;
  color: #fff;
  border: none;
  font-size: 1rem;
  padding: 6px 8px;
  cursor: pointer;
}

#bgLabel {
  color: #fff;
  font-size: 0.9rem;
  padding: 0 6px;
}

@media (prefers-reduced-motion: reduce) {
  #bgVideo { display: none; }
  #bgCanvas { display: none; }
}

.app {
  position: relative; /* ensure app sits above animated background */
  z-index: 2;
}
